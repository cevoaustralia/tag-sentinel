AWSTemplateFormatVersion : "2010-09-09"
Description: >
  Creates the central EC2 event processor for evaluating tags and operating on instances.

Parameters:
  SentinelEC2SourceBucket:
    Type: String
    Description: The S3 bucket, where various sentinel artifacts will live
  SentinelEC2SourceKey:
    Type: String
    Description: The object in the S3 bucket that contains the source package for the Lambda function

Resources:
  SentinelScheduledEventTrigger:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "Fires the event-processing lambda on a regular basis"
      ScheduleExpression: "rate(5 minutes)"
      Name: "SentinelEC2EventTrigger"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "SentinelEC2Processor"
              - "Arn"
          Id: "sentinel-ec2-processor"

  SentinelEC2ProcessorRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": [ "sts:AssumeRole" ],
            "Effect": "Allow",
            "Principal": { "Service": [ "lambda.amazonaws.com" ] }
          }
        ]
      }
      Path: "/"
      Policies:
        -
          PolicyName: "PermitLambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "PermitWriteConsoleLogs"
                Effect: "Allow"
                Action:
                  - "logs:*"
                Resource: "arn:aws:logs:*:*:*"

              -
                Sid: "PermitUseSQS"
                Effect: "Allow"
                Action:
                  - "sqs:Receive*"
                  - "sqs:Get*"
                  - "sqs:Delete*"
                  - "sqs:List*"
                Resource: "arn:aws:sqs:::*"

              -
                Sid: "PermitUseSNS"
                Effect: "Allow"
                Action:
                  - "sns:Publish"
                  - "sns:ListTopics"
                Resource: "*"

              -
                Sid: "PermitUseEc2"
                Effect: "Allow"
                Action:
                  - "ec2:DescribeRegions"
                  - "ec2:DescribeTags"
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeInstanceAttribute"
                  - "ec2:DescribeInstanceStatus"
                  - "ec2:ModifyInstanceAttribute"
                  - "ec2:CreateTags"
                  - "ec2:DeleteTags"
                  - "ec2:TerminateInstances"
                  - "ec2:StopInstances"
                  - "iam:ListAccountAliases"
                  - "autoscaling:DescribeAutoScalingInstances"
                "Resource": "*"

  SentinelEC2Processor:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket:
          Ref: "SentinelEC2SourceBucket"
        S3Key:
          Ref: "SentinelEC2SourceKey"

      Description: "Polls SQS queues in all regions and processes EC2 events from them"
      Handler: "ec2_process_messages.lambda_handler"
      MemorySize: "128"
      Role:
        Fn::GetAtt:
          - "SentinelEC2ProcessorRole"
          - "Arn"
      Runtime: "python2.7"
      Timeout: "90"

  SentinelEC2ProcessorPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName:
        Fn::GetAtt:
          - "SentinelEC2Processor"
          - "Arn"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "SentinelScheduledEventTrigger"
          - "Arn"
